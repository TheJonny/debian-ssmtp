head	2.5;
access;
symbols;
locks; strict;
comment	@ * @;


2.5
date	2002.02.10.19.32.28;	author matt;	state Exp;
branches;
next	2.4;

2.4
date	2002.02.10.18.32.40;	author matt;	state Exp;
branches;
next	2.3;

2.3
date	2002.02.09.15.53.18;	author matt;	state Exp;
branches;
next	2.2;

2.2
date	2001.10.15.18.41.51;	author matt;	state Exp;
branches;
next	2.1;

2.1
date	2001.07.30.11.41.19;	author matt;	state Exp;
branches;
next	2.0;

2.0
date	2001.07.30.11.39.21;	author matt;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.24.12.12.41;	author matt;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.19.12.47.00;	author matt;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.05.17.01.29;	author matt;	state Exp;
branches;
next	;


desc
@Header definitions for sSMTP
@


2.5
log
@Fix prototype
@
text
@/*

 $Id: ssmtp.h,v 2.4 2002/02/10 18:32:40 matt Exp matt $

 See COPYRIGHT for the license

*/
#include <sys/types.h>
#include <stdio.h>
#include <pwd.h>

#define BUF_SZ  (1024 * 2)	/* A pretty large buffer, but not outrageous */

#define MAXWAIT (10 * 60)	/* Maximum wait between commands, in seconds */
#define MEDWAIT (5 * 60)

#define MAXSYSUID 999		/* Highest UID which is a system account */

#ifndef _POSIX_ARG_MAX
#define MAXARGS 4096
#else
#define MAXARGS  _POSIX_ARG_MAX
#endif

#define YES 1
#define NO 0

typedef enum {False, True} bool_t;

struct string_list {
	char *string;
	struct string_list *next;
};

typedef struct string_list headers_t;
typedef struct string_list rcpt_t;

/* main.c */
char *ADDR_parse(char *);
char *append_domain(char *);
char *FROM_strip(char *);
void FROM_rewrite(char *, int);
void FROM_format(void);
void handler(void);
void standardise(char *);
void revaliases(struct passwd *);
int ssmtp(char **);
char *basename(char *);

/* header.c */
void HEADER_record(char *);
void HEADER_parse(FILE *);
void HEADER_save(char *);

/* rcpt.c */
void RCPT_parse(char *);
void RCPT_save(char *);
char * RCPT_remap(char *);

/* net.c */
ssize_t fd_getc(int, void *);
int SMTP_read(int, char *);
ssize_t fd_puts(int, const void *, size_t);
void SMTP_write(int, char *, ...);
int SMTP_open(char *, int);
int SMTP_OK(int, char *);

/* log.c */
void log_event(int, char *, ...);
void dead_letter(void);
void die(char *, ...);
void paq(char *, ...);

/* options.c */
char **parse_options(int, char **);
bool_t read_config(void);
void parse_config(FILE *);

/* util.c */
char *STRIP__leading_space(char *);
char *STRIP__trailing_space(char *);

/* arpadate.c */
void get_arpadate(char *);

/* base64.c */
void to64frombits(unsigned char *, const unsigned char *, int);
int from64tobits(char *, const char *);

@


2.4
log
@Updated with new function prototypes
@
text
@d3 1
a3 1
 $Id: ssmtp.h,v 2.3 2002/02/09 15:53:18 matt Exp matt $
d81 1
a81 1
void STRIP__trailing_space(char *);
@


2.3
log
@Added definitions from options.c
@
text
@d3 1
a3 1
 $Id: ssmtp.h,v 2.2 2001/10/15 18:41:51 matt Exp matt $
d8 3
a10 4

#define YES 1
#define NO 0
typedef enum {False, True} Bool;
d25 34
a58 6
/*
logging.c
*/
void log_event(int, char *, ...);
void paq(char *, ...);
void die(char *, ...);
d60 2
a61 3
/*
net.c
*/
d63 1
d68 14
a81 4
/*
options.c
*/
char **do_options(int, char **);
d83 2
a84 4
/*
arpadate.c
*/
int get_arpadate(char *);
d86 1
a86 3
/*
base64.c
*/
d88 2
@


2.2
log
@Remove prototypes for parseaddr.c
@
text
@d3 1
a3 1
 $Id: ssmtp.h,v 2.1 2001/07/30 11:41:19 matt Exp matt $
d34 1
a34 1
netfunc.c
d40 5
@


2.1
log
@Header clean-up (again)
@
text
@d3 1
a3 1
 $Id: ssmtp.h,v 2.0 2001/07/30 11:39:21 matt Exp matt $
d11 1
a44 6

/*
parseaddr.c
*/
void quotes(char **);
int parseaddr(char *, char *, int);
@


2.0
log
@New version
@
text
@d3 3
a5 1
 $Id$
@


1.3
log
@Checkpoint
@
text
@a1 10
 * ssmtp.h -- Sizing and return-code defines, etc. Stuff you
 *	don't want to think about in the main program.
 */
#define YES   1
#define NO    0 
#define ERR   (-1)

#define MAXLINE	(1024*2) /* A pretty large buffer, but not outrageous. */
#define MAXWAIT (10*60)  /* Maximum wait between commands, in seconds. */
#define MEDWAIT (5*60)
d3 13
a15 1
#define MAXSYSUID 999	/* Highest UID considered to be a system account. */
d23 25
a47 4
#ifdef lint
extern char *sprintf();	/* Ah yes, backward compatability with errors... */
extern void	exit();
#endif
d49 4
a52 3
void get_arpadate(char *);
void log_event(int syslog_code, char *format, ...);
void die(char *format, ...);
@


1.2
log
@Changed definition of system UID's from <10 to <1000
@
text
@d2 1
a2 1
 * spop.h -- Sizing and return-code defines, etc. Stuff you
d25 4
@


1.1
log
@Header definition file for sSMTP
@
text
@d13 2
@
