head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2002.04.01.12.57.11;	author matt;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.29.14.42.21;	author matt;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.10.21.58.02;	author matt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.10.21.28.54;	author matt;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.10.21.21.46;	author matt;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.10.21.04.26;	author matt;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.10.19.25.37;	author matt;	state Exp;
branches;
next	;


desc
@From field processing functions
@


1.7
log
@Updated to fix invalid free() bug
@
text
@/*

 $Id: from.c,v 1.6 2002/03/29 14:42:21 matt Exp matt $

 See COPYRIGHT for the license

*/
#include <stdlib.h>
#include <string.h>
#include "ssmtp.h"

extern bool_t FROM_override;
extern bool_t SEEN_from;
extern char *full_from;
extern char *mail_from;
extern char *full_name;
extern char *minus_f;
extern char *minus_F;


/* 
FROM_strip() -- transforms "Name <login@@host>" into "login@@host" or "login@@host (Real name)"
*/
char *FROM_strip(char *str)
{
	char *p, *q;

#if 0
	(void)fprintf(stderr, "*** FROM_strip(): str = [%s]\n", str);
#endif

	if(strncmp("From: ", str, 6) == 0) {
		str += 6;
	}

	/* Remove the real name if necessary - just send the address */
	if((p = ADDR_parse(str)) == (char *)NULL) {
		die("FROM_strip() -- ADDR_parse() failed");
	}

	if((q = strdup(p)) == (char)NULL) {
		die("FROM_strip() -- strdup() failed");
	}

	return(q);
}

#ifdef REWRITE_DOMAIN
/*
FROM_rewrite() -- rewrite From: - Evil, nasty, immoral header-rewrite code 8-)
*/
void FROM_rewrite(char *str, int sz)
{
	if(strncasecmp(str, "From:", 5) == 0) {
		if(snprintf(str, sz, "From: %s", full_from) == -1) {
			die("FROM_rewrite() -- snprintf() failed");
		}
#if 0
		(void)fprintf(stderr, "*** FROM_rewrite(): str = [%s]\n", str);
#endif
	}
}
#endif

/*
FROM_format() -- 
*/
void FROM_format(void)
{
	char buf[(BUF_SZ + 1)];

	if(SEEN_from) {
#if 0
		(void)fprintf(stderr,
			"*** FROM_format(): full_from = [%s]\n", full_from);
#endif
		mail_from = append_domain(FROM_strip(full_from));
#if 0
		(void)fprintf(stderr,
			"*** FROM_format(): mail_from = [%s]\n", mail_from);
#endif
	}

	if(FROM_override) {
		if(minus_f) {
			mail_from = append_domain(minus_f);
		}

		if(minus_F) {
			if(snprintf(buf, BUF_SZ,
				"\"%s\" <%s>", minus_F, mail_from) == -1) {
				die("FROM_format() -- snprintf() failed");
			}
		}
		else if(full_name) {
			if(snprintf(buf, BUF_SZ,
				"\"%s\" <%s>", full_name, mail_from) == -1) {
				die("FROM_format() -- snprintf() failed");
			}
		}
		else {
			if(snprintf(buf, BUF_SZ, "%s", mail_from) == -1) {
				die("FROM_format() -- snprintf() failed");
			}
		}

		if((full_from = strdup(buf)) == (char)NULL) {
			die("FROM_format() -- strdup() failed");
		}
	}
	else {
		if(full_name) {
			if(snprintf(buf, BUF_SZ,
				"\"%s\" <%s>", full_name, mail_from) == -1) {
				die("FROM_format() -- snprintf() failed");
			}

			if((full_from = strdup(buf)) == (char)NULL) {
				die("FROM_format() -- strdup() failed");
			}
		}
		else {
			full_from = mail_from;
		}
	}
#if 0
	(void)fprintf(stderr,
		"*** FORM_format(): full_from = [%s]\n", full_from);
#endif
}
@


1.6
log
@Cleanup naming and (re)add support to generate MAIL FROM from the From: line
@
text
@d3 1
a3 1
 $Id: from.c,v 1.5 2002/02/10 21:58:02 matt Exp matt $
d28 4
a43 1
	free(p);
d73 4
d78 4
@


1.5
log
@Removed debug code define
@
text
@d3 1
a3 1
 $Id: from.c,v 1.4 2002/02/10 21:28:54 matt Exp matt $
d13 1
d49 1
a49 1
void FROM_rewrite(char *buf, int sz)
d51 2
a52 2
	if(strncasecmp(buf, "From:", 5) == 0) {
		if(snprintf(buf, sz, "From: %s", full_from) == -1) {
d56 1
a56 1
		(void)fprintf(stderr, "*** FROM_rewrite(): buf = [%s]\n", buf);
d68 4
@


1.4
log
@More fixes for From: rewriting code
@
text
@d3 1
a3 1
 $Id: from.c,v 1.3 2002/02/10 21:21:46 matt Exp matt $
d110 1
a110 1
#if 1
@


1.3
log
@Fix problem with default From: generation.
@
text
@d3 1
a3 1
 $Id: from.c,v 1.2 2002/02/10 21:04:26 matt Exp matt $
d76 6
@


1.2
log
@Fixed FROM_format() and FROM_rewrite() issues
@
text
@d3 1
a3 1
 $Id: from.c,v 1.1 2002/02/10 19:25:37 matt Exp matt $
d74 2
a75 1
			if(snprintf(buf, BUF_SZ, "\"%s\" <%s>", minus_F, mail_from) == -1) {
d78 6
d85 2
a86 3
			if((full_from = strdup(buf)) == (char)NULL) {
				die("FROM_format() -- strdup() failed");
			}
d91 2
a92 1
			if(snprintf(buf, BUF_SZ, "\"%s\" <%s>", full_name, mail_from) == -1) {
d104 1
a104 1
#if 0
@


1.1
log
@FROM line processing functions for sSMTP
@
text
@d3 1
a3 1
 $Id$
a12 1
extern char *full_name;
d15 1
a49 4
/*
	if(FROM_override) return;
*/

a50 3
#if 1
		(void)fprintf(stderr, "*** FROM_rewrite(): buf = [%s]\n", buf);
#endif
d54 3
a57 1
	return;
d74 7
a80 1
			full_name = minus_F;
d83 9
a91 4

	if(full_name) {
		if(snprintf(buf, BUF_SZ, "\"%s\" <%s>", full_name, mail_from) == -1) {
			die("FROM_format() -- snprintf() failed");
d93 2
a94 3

		if((full_from = strdup(buf)) == (char)NULL) {
			die("FROM_format() -- strdup() failed");
d97 4
a100 3
	else {
		full_from = mail_from;
	}
@
